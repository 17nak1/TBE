sQuote("pomp")
nargs()
?nargs()
?is
?missing
myplot <- function(x, y) {
if(missing(y)) {
y <- x
x <- 1:length(y)
}
plot(x, y)}
myplot(1:2)
xor(1,2)
?xor
x=1
!x
y=2
x&y
x|y
x||y
xor(x,y)
missing(x)
missing(y)
missing(z)
myplot <- function(x, y,z) {
if(missing(y)) {
y <- x
x <- 1:length(y)
}
plot(x, y)}
missing(z)
z=NULL
missing(z)
myplot <- function(x, y,z) {
if(missing(y)) {
print(missing((y)))
}
}
myplot(1:2)
myplot <- function(x, y,z) {
if(missing(y)) {
print("l")
}
}
myplot(1:2)
myplot(1:2, y=NULL)
?
measform2pomp
??measform2pomp
help(measform2pomp)
library(pomp)
help(measform2pomp)
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- Nember(deltaT)
if (skelmapDelta_t <= 0) {
throw 'in ‘map’, ‘delta.t’ must be positive.'
}
f
}
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- Nember(deltaT)
if (skelmapDelta_t <= 0) {
}
f
}
map
map(2,1)
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- as.numeric(deltaT)
if (skelmapDelta_t <= 0) {
}
f
}
map(2,1)
setwd("~/Git/TBE/R")
source('~/Git/TBE/R/RunTrajAll.R', echo=TRUE)
params.fixed
setwd("~/Git/TBE/R")
source('~/Git/TBE/R/RunTrajAll.R', echo=TRUE)
c(params.ic.fit,params.fit)
setwd("~/Git/TBE/R")
setwd("~/Git/TBE/R")
source('~/Git/TBE/R/GenerateSobol.R')
# setwd("C:/Users/Admin/Dropbox/Projects/2017to2019/TBE_case_fitting/Inference/ForNazila190705")
setwd("~/Git/TBE/R")
source("SetValues.R")
no.points <- 20000#20e3
nstart <- 1
runs <- c(1)
ic <- rep(0,length(statenames))
names(ic) <- paste0(statenames,0)
runs = 1
for (run in runs) {
if (run==1) {
LowerBounds <- c(p=2000, omega=0.1, delta=0.5,
mu_e=0.02618, mu_ql=0.0068, mu_el=0.001428, mu_qn=0.0034, mu_en=0.000476,
mu_qa=0.00136, mu_ea=0.000408, mu_h=1/365,
beta_nh=0.9, beta_hl=0.8, beta_hn=0.8,
tau=0.1,
lambda_l=0.005,lambda_n=0.005,lambda_a=0.005, alpha=0.01, f_l=0.1, f_n=0.1, f_a=0.1,kappa=0.0001,
c=0.4, Tf=4, obsprob=0.2, T_min_l = 5,gamma=1/100,
ic)
UpperBounds <- LowerBounds
UpperBounds["omega"] <- 10
UpperBounds["tau"] <- 1
UpperBounds["lambda_l"] <- 0.1
UpperBounds["lambda_n"] <- 0.1
UpperBounds["lambda_a"] <- 0.1
UpperBounds["alpha"] <- 100
UpperBounds["f_l"] <- 1
UpperBounds["f_n"] <- 1
UpperBounds["f_a"] <- 1
UpperBounds["kappa"] <- 0.1
UpperBounds["obsprob"]<-0.5
UpperBounds["T_min_l"]<-11
UpperBounds["gamma"] <- 0.5
# UpperBounds[names(ab)] <- 1
UpperBounds[names(ic)] <- c(rep(100,11),0.5,0.5)
ParamRanges<-sobolDesign(LowerBounds, UpperBounds, no.points)
ParamRanges <- ParamRanges[(nstart):(no.points),]
ParamSetFile <- paste0("ParamSet_TBE.csv")
write.csv(ParamRanges,ParamSetFile,row.names=FALSE)
} else {
PrevResults<-read.table("TBE_all.csv", header=TRUE, sep=",")
BestResult<-PrevResults[run-1,]
epsilon<-0.1
LowerBounds <- c(p=2000,omega=BestResult["omega"][[1]]*(1-epsilon), delta=0.5,
mu_e=0.02618, mu_ql=0.0068, mu_el=0.001428, mu_qn=0.0034, mu_en=0.000476,
mu_qa=0.00136, mu_ea=0.000408, mu_h=1/365,
beta_nh=0.9, beta_hl=0.8, beta_hn=0.8,
tau=BestResult["tau"][[1]]*(1-epsilon),
lambda_l=BestResult["lambda_l"][[1]]*(1-epsilon), lambda_n=BestResult["lambda_n"][[1]]*(1-epsilon),lambda_a=BestResult["lambda_a"][[1]]*(1-epsilon), alpha=BestResult["alpha"][[1]]*(1-epsilon),
f_l=BestResult["f_l"][[1]]*(1-epsilon), f_n=BestResult["f_n"][[1]]*(1-epsilon), f_a=BestResult["f_a"][[1]]*(1-epsilon),
kappa=BestResult["kappa"][[1]]*(1-epsilon),
c=0.4, Tf=4, obsprob=BestResult["obsprob"][[1]]*(1-epsilon),
T_min_l=BestResult["T_min_l"][[1]]*(1-epsilon),
gamma=BestResult["gamma"][[1]]*(1-epsilon),
ic)
epsilon<-0.1
UpperBounds <- LowerBounds
UpperBounds["omega"] <- BestResult["omega"][[1]]*(1+epsilon)
UpperBounds["tau"] <- BestResult["tau"][[1]]*(1+epsilon)
UpperBounds["lambda_l"] <- BestResult["lambda_l"][[1]]*(1+epsilon)
UpperBounds["lambda_n"] <- BestResult["lambda_n"][[1]]*(1+epsilon)
UpperBounds["lambda_a"] <- BestResult["lambda_a"][[1]]*(1+epsilon)
UpperBounds["alpha"] <- BestResult["alpha"][[1]]*(1+epsilon)
UpperBounds["f_l"] <- min(BestResult["f_l"][[1]]*(1+epsilon),1)
UpperBounds["f_n"] <- min(BestResult["f_n"][[1]]*(1+epsilon),1)
UpperBounds["f_a"] <- min(BestResult["f_a"][[1]]*(1+epsilon),1)
UpperBounds["kappa"] <- BestResult["kappa"][[1]]*(1+epsilon)
UpperBounds["obsprob"] <-BestResult["obsprob"][[1]]*(1+epsilon)
UpperBounds["T_min_l"] <- BestResult["T_min_l"][[1]]*(1+epsilon)
UpperBounds["gamma"] <- BestResult["gamma"][[1]]*(1-epsilon)
UpperBounds[names(ic)] <- c(rep(100,11),0.5,0.5)
# write.csv(LowerBounds,"low.csv",row.names=FALSE)
# write.csv(UpperBounds,"up.csv",row.names=FALSE)
ParamRanges<-sobolDesign(LowerBounds, UpperBounds, no.points)
ParamRanges <- ParamRanges[(nstart):(no.points),]
ParamSetFile <- paste0("ParamSet_run",run,".csv")
write.csv(ParamRanges,"ll.csv",row.names=FALSE)
}
}
setwd(mainDir)
source('~/Git/TBE/R/GenerateSobol.R')
setwd("~/Git/TBE/R")
source('~/Git/TBE/R/GenerateSobol.R')
source('~/Git/TBE/R/GenerateSobol.R')
source('~/Git/TBE/R/GenerateSobol.R', echo=TRUE)
